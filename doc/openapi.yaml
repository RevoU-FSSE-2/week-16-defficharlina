openapi: 3.0.0
info:
  title: 'Transaction'
  version: 1.0.0
  description: 'Manage transaction'
servers:
  - url: http://localhost:3000
    description: 'Server'
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 'Bearer with JWT Token'
  schemas:
    RegisterUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          minLength: 8
          pattern: "^(?=.*[a-zA-Z])(?=.*[0-9]).*$"
        role:
          type: string
          enum:
            - "maker"
            - "approver"
      required:
        - username
    LoginUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    BadRequest:
      type: object
      properties:
        error:
          type: string
paths:
  /auth/register:
    post:
      summary: 'Register new user'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '200':
          description: 'User Created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      role:
                        type: string
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'           
  /auth/login:
    post:
      summary: 'Login user'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: 'Login Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: string
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /transfer:
    get:
      security:
        - bearer: []
      summary: 'Get all transfer'
      responses:
        '200':
          description: 'Get all transfers'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        amount:
                          type: integer
                        destination account:
                          type: string
                        information:
                          type: string
  /transfer:
    post:
      security:
        - bearer: []
      summary: Create a transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transfer"
      responses:
        "201":
          description: Transfer successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      amount:
                        type: integer
                      information:
                        type: string
                      status:
                        type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /transfers/approve:
    put:
      security:
        - bearer: []
      summary: Approve a transfer
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transferId:
                  type: string
                  description: The ID of the transfer to approve
                status:
                  type: string
                  enum:
                    - approved
                    - not approved
                  description: The status"
      responses:
        "200":
          description: Transfer successfully approved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"